{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f11\fswiss\fcharset0\fprq2{\*\panose 00000000000000000000}MS Sans Serif;}{\f82\froman\fcharset238\fprq2 Times New Roman CE;}{\f83\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f85\froman\fcharset161\fprq2 Times New Roman Greek;}
{\f86\froman\fcharset162\fprq2 Times New Roman Tur;}{\f87\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f88\fswiss\fcharset238\fprq2 Arial CE;}{\f89\fswiss\fcharset204\fprq2 Arial Cyr;}{\f91\fswiss\fcharset161\fprq2 Arial Greek;}
{\f92\fswiss\fcharset162\fprq2 Arial Tur;}{\f93\fswiss\fcharset186\fprq2 Arial Baltic;}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;
\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\widctlpar\adjustright 
\fs20\cgrid \snext0 Normal;}{\*\cs10 \additive Default Paragraph Font;}}{\info{\title CSDemos Demo}{\author Jason Wharton}{\operator Jason Wharton}{\creatim\yr2000\mo2\dy13\min1}{\revtim\yr2000\mo2\dy13\min1}{\version2}{\edmins0}{\nofpages2}{\nofwords541}
{\nofchars3084}{\*\company CPS - Computer Programming Solutions}{\nofcharsws3787}{\vern89}}\widowctrl\ftnbj\aenddoc\hyphcaps0\viewkind4\viewscale100 \fet0\sectd \linex0\sectdefaultcl {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang{\pntxta .}}
{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang{\pntxta .}}{\*\pnseclvl4\pnlcltr\pnstart1\pnindent720\pnhang{\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}
{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}{\*\pnseclvl9
\pnlcrm\pnstart1\pnindent720\pnhang{\pntxtb (}{\pntxta )}}\pard\plain \nowidctlpar\adjustright \fs20\cgrid {\b\f1\fs28\cgrid0 CSDemos Demo
\par 
\par }{\f11\cgrid0 This demo provides an excellent comparison of IB Objects to the BDE/VCL. In Delphi 3 there is a sample application using the BDE and this is a converted version of it using IB Objects. Please open both versions and compare
 them for performance and responsiveness. Try putting the GDB on a remote server and then comapre and the differences should really stand out.
\par 
\par I have provided a SQL Monitor so that you can see the client's dialog with the server.
\par 
\par One of the best aspects 
shown in this demo is how with IB Objects you can invalidate individual rows of a dataset instead of having to refresh the entire dataset by fetching all of the records again. You can also bump records out of the buffer that were deleted with a stored pro
cedure in a separate component. No need to refresh at all in this case!
\par 
\par In the "See a View in action" form make an update to the name and then switch to the PhoneList to see not only that the cursor position is maintained but that the change is immediately
 reflected. It is also reflected in the calculated field "full name". The entire dataset did not need to be refreshed in order to accomplish this. Nor was there any memory buffer hacking. The query of the view simply had its row invalidated so it re-fetch
ed that row from the server.
\par 
\par Another nice difference is how easy it is to keep the cursor positioned properly when switching between the employee table and the phone view. In this sample it is easy to see how efficient, quick and effective the ability to i
nvalidate a single row are. With the IB_Query component bookmarks provide a very simple and powerful way to control data. Plus, bookmarks are "garbage collected" and very easy to use. If two tables have the same key structure then they can be used across 
the two datasets as well. I made it so that the bookmarks can be safely stored in stringlists too. Thus, you can easily maintain a custom list of bookmarks if you need to.
\par 
\par In the "Salary Change Trigger Demo" the changes are reflected immediately in the salary history grid. The entire salary history dataset did not need refreshing to do this. Only the key columns and the new record that was added were refreshed.
\par 
\par In the "Query Stored Procedures Demo" you can see how to use a dataset derived from a stored pro
cedure. It is important to note that this dataset can only be used with an IB_Cursor. This is because it is not possible to efficiently select individual rows as the IB_Query needs to be able to do. This is an important limitation that you need to be awar
e
 of. I hope to provide a way to deliver this type of dataset in a buffered way so that it can be viewed with the IB_Grid control. I'll probably do this by giving my buffered dataset the ability to cache whole records as an IB_Cursor fetches them instead o
f fetching keys and then whole records individually.
\par 
\par In the "Executable Stored Procedure Demo" the ability to work with individual records buffers shines again. Towards the bottom of the dataset are a few orders that are open. Click on the "Ship Order" button and see how quickly this takes full effect!

\par 
\par In the client/server model it is desirable to have the server performing updates and various data manipulations on the server. It becomes critical to efficiency and performance if the client application can 
accurately predict these changes and have the ability to refresh only the records that need to be refreshed. This is one major goal of IB Objects to provide this efficient mechanism.
\par 
\par The source code for this entire sample is commented very well so please refer to it for further information. I promise that it will be worth it!
\par 
\par If you have any trouble or questions please let me know.
\par 
\par Thanks,
\par Jason Wharton
\par jwharton@ibobjects.com
\par }}