; Script generated by the My Inno Setup Extensions Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Code]
program Setup;
var
  {Global Vars}

  // this is where we'll temporarily put the files for compiling
  tempFilesLoc: String;

  // Command Line Params for dcc32
  CommandLineParams: String;

  {Delphi 4 Global Variables}
  bD4isInstalled: Boolean;
  sD4RootDir: String;
  D4DTPackages: TArrayOfString;
  D4RTPackages: TArrayOfString;

  {Delphi 5 Global Variables}
  bD5isInstalled: Boolean;
  sD5RootDir: String;
  D5DTPackages: TArrayOfString;
  D5RTPackages: TArrayOfString;

  {Delphi 6 Global Variables}
  bD6isInstalled: Boolean;
  sD6RootDir: String;
  D6DTPackages: TArrayOfString;
  D6RTPackages: TArrayOfString;

  {Delphi 7 Global Variables}
  bD7isInstalled: Boolean;
  sD7RootDir: String;
  D7DTPackages: TArrayOfString;
  D7RTPackages: TArrayOfString;

  HighestDelphiVersion: Integer;

{Scripted Constants - Available in other sections if sig. is: function MyFunc(default: String): String; }
{Can be used in other sections like this: {code:MyFunc('someValue') where 'Somevalue' is the default value }


{************************** All Delphi Versions *************************}

procedure GetInstalledDelphiVersionInfo;
begin
  // Delphi 4
  sD4RootDir:='';
  bD4IsInstalled:=RegQueryStringValue(HKLM, 'Software\Borland\Delphi\4.0', 'RootDir', sD4RootDir);

  // Delphi 5
  sD5RootDir:='';
  bD5IsInstalled:=RegQueryStringValue(HKLM, 'Software\Borland\Delphi\5.0', 'RootDir', sD5RootDir);

  // Delphi 6
  sD6RootDir:='';
  bD6IsInstalled:=RegQueryStringValue(HKLM, 'Software\Borland\Delphi\6.0', 'RootDir', sD6RootDir);

  // Delphi 7
  sD7RootDir:='';
  bD7IsInstalled:=RegQueryStringValue(HKLM, 'Software\Borland\Delphi\7.0', 'RootDir', sD7RootDir);
end;


procedure AddToDelphiSearchPath(aVersion: String; NewEntry: String);
var
  DelphiLib: String;
begin

  // This procedure adds "NewEntry" to Delphi's ("aVersion") Search Path if it doesn't already exist

  // Version should be a single digit

  DelphiLib:='';
  {Get Delphi's Library SearchPath}
  RegQueryStringValue(HKCU, 'Software\Borland\Delphi\'+aVersion+'.0\Library', 'Search Path', Delphilib);

  // Be sure Delphi's Search Path is updated if necessary
  if (pos(NewEntry,DelphiLib)=0) then begin

    // Add the new Entry
    DelphiLib:=DelphiLib+';'+NewEntry;

    // Write the new Library Search Path back to the registry
    RegWriteStringValue(HKCU, 'Software\Borland\Delphi\'+aVersion+'.0\Library','Search Path', DelphiLib);
  end;
end;

procedure MoveCompiledFiles(DelphiRootDir: String; aVersion: String);
var
  SearchMasks: TArrayOfString;
  i: Integer;
  numMasks: Integer;
  s: String;
begin
  numMasks:=7;
  SetArrayLength(SearchMasks,numMasks);
  SearchMasks[0]:='\*RT_D'+aVersion+'.bpl';
  SearchMasks[1]:='\*DT_D'+aVersion+'.bpl';
  SearchMasks[2]:='\*.dcu';
  SearchMasks[3]:='\*.dcr';
  SearchMasks[4]:='\*.dcp';
  SearchMasks[5]:='\*.dfm';
  SearchMasks[6]:='\*.res';

  // move runtime bpls to the delphi+'Version'\bin dir
  s:='';
  s:=FindFirst(TempFilesLoc+SearchMasks[0]);
  while s<>'' do begin
    FileCopy(TempFilesLoc+'\'+s,DelphiRootDir+'\Bin\'+s,False);
    s:=FindNext;
  end;

  // copy designtime bpls and other files to the lib+'Version' directory
  for i:=1 to NumMasks-1 do begin
    s:='';
    s:=FindFirst(TempFilesLoc+SearchMasks[i]);
    while s<>'' do begin
      FileCopy(TempFilesLoc+'\'+s,WizardDirValue+'\D'+aVersion+'\'+s,False);
      s:=FindNext;
    end;
  end;
end;


procedure CompileIBOTools(DelphiVersion: Integer);
var
  resultCode: Integer;
begin
  case DelphiVersion of
    4: begin
      InstExec(D4Compiler(''),TempFilesLoc+'\IB_SQL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D4Compiler(''),TempFilesLoc+'\IB_FTS.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D4Compiler(''),TempFilesLoc+'\IB_RPL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
    end;
    5: begin
      InstExec(D5Compiler(''),TempFilesLoc+'\IB_SQL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D5Compiler(''),TempFilesLoc+'\IB_FTS.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D5Compiler(''),TempFilesLoc+'\IB_RPL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
    end;
    6: begin
      InstExec(D6Compiler(''),TempFilesLoc+'\IB_SQL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D6Compiler(''),TempFilesLoc+'\IB_FTS.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D6Compiler(''),TempFilesLoc+'\IB_RPL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
    end;
    7: begin
      InstExec(D7Compiler(''),TempFilesLoc+'\IB_SQL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D7Compiler(''),TempFilesLoc+'\IB_FTS.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
      InstExec(D7Compiler(''),TempFilesLoc+'\IB_RPL.dpr -E'+WizardDirValue+'\Tools',WizardDirValue,True,True,SW_SHOWNORMAL,ResultCode);
    end;
  end; // case
end;

{******************************* Delphi 4 *******************************}

{make the variable available in the "check" mechanism}
function D4IsInstalled: Boolean;
begin
  Result := bD4IsInstalled;
end;

function D4RootDir(Default: String): String;
begin
  Result := sD4RootDir;
end;

function D4Compiler(Default: String): String;
begin
  Result := sd4RootDir + '\Bin\dcc32.exe';
end;

procedure LoadD4Packages;
begin

  // Load these arrays with all designtime and
  // runtime packages.

  // Runtime Packages
  SetArrayLength(D4RTPackages,7);
  D4RTPackages[0]:=TempFilesLoc+'\IBO40CRT_D4.dpk';
  D4RTPackages[1]:=TempFilesLoc+'\IBO40TRT_D4.dpk';
  D4RTPackages[2]:=TempFilesLoc+'\IBO40VRT_D4.dpk';
  D4RTPackages[3]:=TempFilesLoc+'\IBO40FRT_D4.dpk';
  D4RTPackages[4]:=TempFilesLoc+'\IBO40XRT_D4.dpk';
  D4RTPackages[5]:=TempFilesLoc+'\IBO40WRT_D4.dpk';
  D4RTPackages[6]:=TempFilesLoc+'\IBO40WXRT_D4.dpk';

  // Designtime Packages
  SetArrayLength(D4DTPackages,9);
  D4DTPackages[0]:=TempFilesLoc+'\IBO40CDT_D4.dpk';
  D4DTPackages[1]:=TempFilesLoc+'\IBO40ADT_D4.dpk';
  D4DTPackages[2]:=TempFilesLoc+'\IBO40TDT_D4.dpk';
  D4DTPackages[3]:=TempFilesLoc+'\IBO40VDT_D4.dpk';
  D4DTPackages[4]:=TempFilesLoc+'\IBO40FDT_D4.dpk';
  D4DTPackages[5]:=TempFilesLoc+'\IBO40XDT_D4.dpk';
  D4DTPackages[6]:=TempFilesLoc+'\IBO40WDT_D4.dpk';
  D4DTPackages[7]:=TempFilesLoc+'\IBO40WXDT_D4.dpk';
  D4DTPackages[8]:=TempFilesLoc+'\IBO40EDT_D4.dpk';
end;

procedure InstallD4; // Main D4 Install Routine
var
  i: integer;
  s: String;
  ResultCode: Integer;
begin
  {Move runtime bpls to the delphi\bin directory}
  {Move designtime bpls, *.dcus to the \D4 dir}

  ForceDirectories(WizardDirValue+'\D4');

  // Use a TStringArray to enable looping and easy code maintenance
  LoadD4Packages;

  // compile runtime packages
  for i:=0 to GetArrayLength(D4RTPackages)-1 do begin
    // run dcc32
    InstExec(D4Compiler(''),D4RTPackages[i]+CommandLineParams,ExtractFileDir(D4RTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode);
  end;

  // compile designtime packages
  for i:=0 to GetArrayLength(D4DTPackages)-1 do begin
    // run dcc32
    InstExec(D4Compiler(''),D4DTPackages[i]+CommandLineParams,ExtractFileDir(D4DTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode);
  end;

  // move the files to their new home
  MoveCompiledFiles(sD5RootDir, '5');

  {Add the D4 directory into the D4 Library Search Path}
  AddToDelphiSearchPath('4', WizardDirValue+'\D4');
end;

{******************************* Delphi 5 *******************************}

{make the variable available in the "check" mechanism}
function D5IsInstalled: Boolean;
begin
  Result:=bD5IsInstalled;
end;

function D5RootDir(Default: String): String;
begin
  Result:=sD5RootDir;
end;

function D5Compiler(Default: String): String;
begin
  Result:=sd5RootDir+'\Bin\dcc32.exe';
end;

procedure LoadD5Packages;
begin

  // Load these arrays with all designtime and
  // runtime packages.

  // Runtime Packages
  SetArrayLength(D5RTPackages,7);
  D5RTPackages[0]:=TempFilesLoc+'\IBO40CRT_D5.dpk';
  D5RTPackages[1]:=TempFilesLoc+'\IBO40TRT_D5.dpk';
  D5RTPackages[2]:=TempFilesLoc+'\IBO40VRT_D5.dpk';
  D5RTPackages[3]:=TempFilesLoc+'\IBO40FRT_D5.dpk';
  D5RTPackages[4]:=TempFilesLoc+'\IBO40XRT_D5.dpk';
  D5RTPackages[5]:=TempFilesLoc+'\IBO40WRT_D5.dpk';
  D5RTPackages[6]:=TempFilesLoc+'\IBO40WXRT_D5.dpk';

  // Designtime Packages
  SetArrayLength(D5DTPackages,9);
  D5DTPackages[0]:=TempFilesLoc+'\IBO40CDT_D5.dpk';
  D5DTPackages[1]:=TempFilesLoc+'\IBO40ADT_D5.dpk';
  D5DTPackages[2]:=TempFilesLoc+'\IBO40TDT_D5.dpk';
  D5DTPackages[3]:=TempFilesLoc+'\IBO40VDT_D5.dpk';
  D5DTPackages[4]:=TempFilesLoc+'\IBO40FDT_D5.dpk';
  D5DTPackages[5]:=TempFilesLoc+'\IBO40XDT_D5.dpk';
  D5DTPackages[6]:=TempFilesLoc+'\IBO40WDT_D5.dpk';
  D5DTPackages[7]:=TempFilesLoc+'\IBO40WXDT_D5.dpk';
  D5DTPackages[8]:=TempFilesLoc+'\IBO40EDT_D5.dpk';
end;


procedure InstallD5; // Main D5 Install Routine
var
  i: integer;
  s: String;
  ResultCode: Integer;
begin
  {Move runtime bpls to the delphi\bin directory}
  {Move designtime bpls, *.dcus to the \D5 dir}

  ForceDirectories(WizardDirValue+'\D5');

  // Use a TStringArray to enable looping and easy code maintenance
  LoadD5Packages;

  // compile runtime packages
  for i:=0 to GetArrayLength(D5RTPackages)-1 do begin
    // run dcc32
    InstExec(D5Compiler(''),D5RTPackages[i]+CommandLineParams,ExtractFileDir(D5RTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode)
  end;

  // compile designtime packages
  for i:=0 to GetArrayLength(D5DTPackages)-1 do begin
    // run dcc32
    InstExec(D5Compiler(''),D5DTPackages[i]+CommandLineParams,ExtractFileDir(D5DTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode)
  end;

  // move the files to their new home
  MoveCompiledFiles(sD5RootDir, '5');

  {Add the D5 directory into the D5 Library Search Path}
  AddToDelphiSearchPath('5', WizardDirValue+'\D5');
end;

{******************************* Delphi 6 *******************************}
{make the variable available in the "check" mechanism}
function D6IsInstalled: Boolean;
begin
  Result:=bD6IsInstalled;
end;

function D6RootDir(Default: String): String;
begin
  Result:=sD6RootDir;
end;

function D6Compiler(Default: String): String;
begin
  Result:=sD6RootDir+'\Bin\dcc32.exe';
end;

procedure LoadD6Packages;
begin

  // Load these arrays with all designtime and
  // runtime packages.
  //
  // D6 dpks do not have  extension but bpls will!

  // Runtime Packages
  SetArrayLength(D6RTPackages,7);
  D6RTPackages[0]:=TempFilesLoc+'\IBO40CRT.dpk';
  D6RTPackages[1]:=TempFilesLoc+'\IBO40TRT.dpk';
  D6RTPackages[2]:=TempFilesLoc+'\IBO40VRT.dpk';
  D6RTPackages[3]:=TempFilesLoc+'\IBO40FRT.dpk';
  D6RTPackages[4]:=TempFilesLoc+'\IBO40XRT.dpk';
  D6RTPackages[5]:=TempFilesLoc+'\IBO40WRT.dpk';
  D6RTPackages[6]:=TempFilesLoc+'\IBO40WXRT.dpk';

  // Designtime Packages
  SetArrayLength(D6DTPackages,9);
  D6DTPackages[0]:=TempFilesLoc+'\IBO40CDT.dpk';
  D6DTPackages[1]:=TempFilesLoc+'\IBO40ADT.dpk';
  D6DTPackages[2]:=TempFilesLoc+'\IBO40TDT.dpk';
  D6DTPackages[3]:=TempFilesLoc+'\IBO40VDT.dpk';
  D6DTPackages[4]:=TempFilesLoc+'\IBO40FDT.dpk';
  D6DTPackages[5]:=TempFilesLoc+'\IBO40XDT.dpk';
  D6DTPackages[6]:=TempFilesLoc+'\IBO40WDT.dpk';
  D6DTPackages[7]:=TempFilesLoc+'\IBO40WXDT.dpk';
  D6DTPackages[8]:=TempFilesLoc+'\IBO40EDT.dpk';
end;

procedure InstallD6; // Main D6 Install Routine
var
  i: integer;
  s: String;
  ResultCode: Integer;
begin
  {Move runtime bpls to the delphi\bin directory}
  {Move designtime bpls, *.dcus to the \D6 dir}

  ForceDirectories(WizardDirValue+'\D6');

  // Use a TStringArray to enable looping and easy code maintenance
  LoadD6Packages;

  // compile runtime packages
  for i:=0 to GetArrayLength(D6RTPackages)-1 do begin
    // run dcc32
    InstExec(D6Compiler(''),D6RTPackages[i]+CommandLineParams,ExtractFileDir(D6RTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode);
  end;

  // compile designtime packages
  for i:=0 to GetArrayLength(D6DTPackages)-1 do begin
    // run dcc32
    InstExec(D6Compiler(''),D6DTPackages[i]+CommandLineParams,ExtractFileDir(D6DTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode)
  end;

  // move the files to their new home
  MoveCompiledFiles(sD6RootDir, '6');

  {Add the D6 directory into the D6 Library Search Path}
  AddToDelphiSearchPath('6', WizardDirValue+'\D6')

end;

{******************************* Delphi 7 *******************************}
{make the variable available in the "check" mechanism}
function D7IsInstalled: Boolean;
begin
  Result:=bD7IsInstalled;
end;

function D7RootDir(Default: String): String;
begin
  Result:=sD7RootDir;
end;

function D7Compiler(Default: String): String;
begin
  Result:=sD7RootDir+'\Bin\dcc32.exe';
end;

procedure LoadD7Packages;
begin

  // Load these arrays with all designtime and
  // runtime packages.
  //
  // D7 dpks do not have extension but bpls will!

  // Runtime Packages
  SetArrayLength(D7RTPackages,7);
  D7RTPackages[0]:=TempFilesLoc+'\IBO40CRT.dpk';
  D7RTPackages[1]:=TempFilesLoc+'\IBO40TRT.dpk';
  D7RTPackages[2]:=TempFilesLoc+'\IBO40VRT.dpk';
  D7RTPackages[3]:=TempFilesLoc+'\IBO40FRT.dpk';
  D7RTPackages[4]:=TempFilesLoc+'\IBO40XRT.dpk';
  D7RTPackages[5]:=TempFilesLoc+'\IBO40WRT.dpk';
  D7RTPackages[6]:=TempFilesLoc+'\IBO40WXRT.dpk';

  // Designtime Packages
  SetArrayLength(D7DTPackages,9);
  D7DTPackages[0]:=TempFilesLoc+'\IBO40CDT.dpk';
  D7DTPackages[1]:=TempFilesLoc+'\IBO40ADT.dpk';
  D7DTPackages[2]:=TempFilesLoc+'\IBO40TDT.dpk';
  D7DTPackages[3]:=TempFilesLoc+'\IBO40VDT.dpk';
  D7DTPackages[4]:=TempFilesLoc+'\IBO40FDT.dpk';
  D7DTPackages[5]:=TempFilesLoc+'\IBO40XDT.dpk';
  D7DTPackages[6]:=TempFilesLoc+'\IBO40WDT.dpk';
  D7DTPackages[7]:=TempFilesLoc+'\IBO40WXDT.dpk';
  D7DTPackages[8]:=TempFilesLoc+'\IBO40EDT.dpk';
end;

procedure InstallD7; // Main D7 Install Routine
var
  i: integer;
  s: String;
  ResultCode: Integer;
begin
  {Move runtime bpls to the delphi\bin directory}
  {Move designtime bpls, *.dcus to the \D7 dir}

  ForceDirectories(WizardDirValue+'\D7');

  // Use a TStringArray to enable looping and easy code maintenance
  LoadD7Packages;

  // compile runtime packages
  for i:=0 to GetArrayLength(D7RTPackages)-1 do begin
    // run dcc32
    InstExec(D7Compiler(''),D7RTPackages[i]+CommandLineParams,ExtractFileDir(D7RTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode)
  end;

  // compile designtime packages
  for i:=0 to GetArrayLength(D7DTPackages)-1 do begin
    // run dcc32
    InstExec(D7Compiler(''),D7DTPackages[i]+CommandLineParams,ExtractFileDir(D7DTPackages[i]),True,True,SW_SHOWNORMAL,ResultCode)
  end;

  // move the files to their new home
  MoveCompiledFiles(sD7RootDir, '7');

  {Add the D7 directory into the D7 Library Search Path}
  AddToDelphiSearchPath('7', WizardDirValue+'\D7');

end;

{******************************* Main Routines *******************************}

// Perform some initializations.  Return False to abort setup
function InitializeSetup: Boolean;
begin
  // Do not use any user defined vars in here such as {app}

  Result:=False;

  // Find out what's installed
  GetInstalledDelphiVersionInfo;

  // this is where we'll temporarily put the files for compiling
  TempFilesLoc:=ChangeDirConst('{tmp}');

  // be sure the *.pas files get built and the dcu's go where we need them.
  CommandLineParams:=' -B -N'+TempFilesLoc;

  Result:=True;
end;


procedure CurStepChanged(CurStep: Integer);
begin
  case CurStep of
    {After all the files are copied, install into the IDE}
    csFinished: begin
      HighestDelphiVersion:=0; // the highest version of Delphi that is installed - global
      MsgBox('IBObjects Setup will now compile and install packages into the appropriate IDE(s)', mbInformation, MB_OK);
      if (pos('D4',WizardSelectedTasks(False))>0) then begin
        InstallD4;
        HighestDelphiVersion:=4;
      end;
      if (pos('D5',WizardSelectedTasks(False))>0) then begin
        InstallD5;
        HighestDelphiVersion:=5;
      end;
      if (pos('D6',WizardSelectedTasks(False))>0) then begin
        InstallD6;
        HighestDelphiVersion:=6;
      end;
      if (pos('D7',WizardSelectedTasks(False))>0) then begin
        InstallD7;
        HighestDelphiVersion:=7;
      end;
      // Copy files to the docs directory
      CopyDocs;
      // Compile the ibo tools and put the compiled tools into the tools directory
      if HighestDelphiVersion>0 then begin
        MsgBox('IBObjects Setup will now compile the included IBO tools.', mbInformation, MB_OK);
        CompileIBOTools(HighestDelphiVersion);
      end;

    end;
  end;
end;

procedure CopyDocs;
begin
  // In this procedure we move ReleaseNotes.rtf to the "docs" directory
  ForceDirectories(WizardDirValue+'\Docs');
  FileCopy(WizardDirValue+'\ReleaseNotes.rtf',WizardDirValue+'\Docs\ReleaseNotes.rtf',False);
  DeleteFile(WizardDirValue+'\ReleaseNotes.rtf');
end;



// This is a little odd but is correct
begin // of the "program"
end.

// End Code Section


[Setup]
;WizardDebug=No
AppName=IB Objects
;{Jason: Change the version with each build}
AppVerName=IB Objects 4.2 Fn
AppPublisher=Jason Wharton
AppPublisherURL=http://www.ibobjects.com
AppSupportURL=http://www.ibobjects.com
AppUpdatesURL=http://www.ibobjects.com
; This is the default install directory
DefaultDirName=C:\IBO4
DisableProgramGroupPage=yes
;LicenseFile=license.txt
;InfoBeforeFile=info.txt preinstall
;InfoAfterFile=info post install
; uncomment the following line if you want your installation to run on NT 3.51 too.
; MinVersion=4,3.51

[Types]
Name: "full"; Description:"Full installation"
;Name: "custom"; Description: "Custom installation"; Flags: iscustom

[Components]
; With th initial release we are not allowing changes to what is installed
Name: "IBOcomponents"; Description: "Main IBO Components";   Types: full; Flags: fixed
Name: "samples";       Description: "Sample Applications";   Types: full; Flags: fixed
;Name: "addons";        Description: "Various Addons";        Types: full; Flags: fixed
Name: "tutorials";     Description: "Contributed Tutorials"; Types: full; Flags: fixed
Name: "IBOsource";     Description: "IBO Source Code";       Types: full; Flags: fixed

[Tasks]
Name: D4; Description: "Install to Delphi 4"; Check: D4IsInstalled;
Name: D5; Description: "Install to Delphi 5"; Check: D5IsInstalled;
Name: D6; Description: "Install to Delphi 6"; Check: D6IsInstalled;
Name: D7; Description: "Install to Delphi 7"; Check: D7IsInstalled;

[Dirs]
Name: "{app}\Tools";


[Files]
; ibocomponents...put the source in the user's tmp for compiling purposes..then files are deleted
Source: "C:\IBO\*.*";           DestDir: "{tmp}";                    CopyMode: alwaysoverwrite; Components: IBOComponents
; AddOns
;Source: "C:\IBO\AddOn\*.*";     DestDir: "{app}\AddOn";     CopyMode: alwaysoverwrite; Components: addons;    Flags: recurseSubdirs;
; Samples
Source: "C:\IBO\Samples\*.*";   DestDir: "{app}\Samples";   CopyMode: alwaysoverwrite; Components: samples;   Flags: recurseSubdirs;
; Tutorials
Source: "C:\IBO\Tutorials\*.*"; DestDir: "{app}\Tutorials"; CopyMode: alwaysoverwrite; Components: tutorials; Flags: recurseSubdirs;
; Source
Source: "C:\IBO\*.*";           DestDir: "{app}";           CopyMode: alwaysoverwrite; Components: IBOSource

[Registry]
; Add an entry to use for later installations
Root: HKLM; Subkey: "Software\IB Objects"; ValueType: "string"; ValueName: "RootDir"; ValueData:"{app}"

; Install the designtime packages into the Delphi 4 IDE}
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40ADT_D4.bpl" ; ValueData: "IB Objects Native Data Access Components"; Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40CDT_D4.bpl";  ValueData: "IB Objects Core Components";               Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40EDT_D4.bpl";  ValueData: "IB Objects Editors";                       Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40FDT_D4.bpl";  ValueData: "IB Objects Forms and Dialogs";             Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40TDT_D4.bpl";  ValueData: "IBObjects Tools Components";               Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40VDT_D4.bpl";  ValueData: "IBObjects Visual Controls";                Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40WDT_D4.bpl";  ValueData: "IBObjects Internet Extensions";            Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40WXDT_D4.bpl"; ValueData: "IBObjects TDataset Internet Extensions";   Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\4.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D4\IBO40XDT_D4.bpl";  ValueData: "IBObjects TDataset Components";            Tasks: D4; Flags: createvalueifdoesntexist uninsdeletevalue

; Install the designtime packages into the Delphi 5 IDE}
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40ADT_D5.bpl" ; ValueData: "IB Objects Native Data Access Components"; Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40CDT_D5.bpl";  ValueData: "IB Objects Core Components";               Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40EDT_D5.bpl";  ValueData: "IB Objects Editors";                       Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40FDT_D5.bpl";  ValueData: "IB Objects Forms and Dialogs";             Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40TDT_D5.bpl";  ValueData: "IBObjects Tools Components";               Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40VDT_D5.bpl";  ValueData: "IBObjects Visual Controls";                Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40WDT_D5.bpl";  ValueData: "IBObjects Internet Extensions";            Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40WXDT_D5.bpl"; ValueData: "IBObjects TDataset Internet Extensions";   Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\5.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D5\IBO40XDT_D5.bpl";  ValueData: "IBObjects TDataset Components";            Tasks: D5; Flags: createvalueifdoesntexist uninsdeletevalue

; Install the designtime packages into the Delphi 6 IDE}
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40ADT_D6.bpl" ; ValueData: "IB Objects Native Data Access Components"; Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40CDT_D6.bpl";  ValueData: "IB Objects Core Components";               Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40EDT_D6.bpl";  ValueData: "IB Objects Editors";                       Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40FDT_D6.bpl";  ValueData: "IB Objects Forms and Dialogs";             Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40TDT_D6.bpl";  ValueData: "IBObjects Tools Components";               Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40VDT_D6.bpl";  ValueData: "IBObjects Visual Controls";                Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40WDT_D6.bpl";  ValueData: "IBObjects Internet Extensions";            Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40WXDT_D6.bpl"; ValueData: "IBObjects TDataset Internet Extensions";   Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\6.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D6\IBO40XDT_D6.bpl";  ValueData: "IBObjects TDataset Components";            Tasks: D6; Flags: createvalueifdoesntexist uninsdeletevalue

; Install the designtime packages into the Delphi 7 IDE}
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40ADT_D7.bpl" ; ValueData: "IB Objects Native Data Access Components"; Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40CDT_D7.bpl";  ValueData: "IB Objects Core Components";               Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40EDT_D7.bpl";  ValueData: "IB Objects Editors";                       Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40FDT_D7.bpl";  ValueData: "IB Objects Forms and Dialogs";             Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40TDT_D7.bpl";  ValueData: "IBObjects Tools Components";               Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40VDT_D7.bpl";  ValueData: "IBObjects Visual Controls";                Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40WDT_D7.bpl";  ValueData: "IBObjects Internet Extensions";            Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40WXDT_D7.bpl"; ValueData: "IBObjects TDataset Internet Extensions";   Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue
Root: HKCU; Subkey: "Software\Borland\Delphi\7.0\Known Packages"; ValueType: "string"; ValueName: "{app}\D7\IBO40XDT_D7.bpl";  ValueData: "IBObjects TDataset Components";            Tasks: D7; Flags: createvalueifdoesntexist uninsdeletevalue

