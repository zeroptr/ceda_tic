// IBA_StatementLink.INT

{***************************************************************}
{                                                               }
{          IB Objects Components and Resources Library          }
{                                                               }
{          Copyright (C) 1996-2001 Jason Wharton                }
{          and Computer Programming Solutions, Mesa, AZ         }
{                                                               }
{  This source code unit is released under the terms of the     }
{  CPS Trustware License.                                       }
{  It may be distributed or deployed as source code or in       }
{  compiled form only in compliance with the terms and          }
{  conditions of the CPS Trustware License which may be         )
{  examined at http://www.ibobjects.com/ibo_trustware.html      )
{                                                               }
{***************************************************************}

{******************************************************************************}
{  CONTRIBUTED MODIFICATIONS                                                   }
{  Additions or modifications listed below using format:                       }
{                                                                              }
{  Joe Citizen <joe@joecitizen.com>                                            }
{  mm/dd/yyyy                                                                  }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{            Copyright (C) 2001 Joe Citizen                                    }
{                                                                              }
{------------------------------------------------------------------------------}
{  Place your credits and information in the top of the section                }
{  below with any other descriptions or explanations desired.                  }
{------------------------------------------------------------------------------}
{                                                                              }
{                                                                              }
{******************************************************************************}

destructor TIB_StatementLink.Destroy;
begin
  Statement := nil;
  inherited Destroy;
end;

procedure TIB_StatementLink.SetStatement( AValue: TIB_Statement );
var
  LastVal: longint;
begin
  if ( AValue <> Statement ) then
  begin
    ProcessEvent( setBeforeAssignment, longint( AValue ));
    if Assigned( Statement ) then
      with Statement do
        if Assigned( FIB_StatementLinkList ) then
          FIB_StatementLinkList.Remove( Self );
    LastVal := longint( FStatement );
    FStatement := AValue;
    if Assigned( Statement ) then
      with Statement do
        if Assigned( FIB_StatementLinkList ) then
          FIB_StatementLinkList.Add( Self );
    ProcessEvent( setAfterAssignment, LastVal );
  end;
end;

function TIB_StatementLink.GetPrepared: boolean;
begin
  if Assigned( Statement ) then
    Result := Statement.Prepared
  else
    Result := false;
end;

function TIB_StatementLink.GetActive: boolean;
begin
  if Assigned( Statement ) then
    Result := Statement.Active
  else
    Result := false;
end;

function TIB_StatementLink.GetStatementType: TIB_StatementType;
begin
  if Assigned( Statement ) then
    Result := Statement.StatementType
  else
    Result := stUnknown;
end;

{------------------------------------------------------------------------------}

procedure TIB_StatementLink.SysPrepareSQL;
begin
  if Assigned( OnPrepareSQL ) then
    OnPrepareSQL( Self, Statement );
end;

procedure TIB_StatementLink.SysBeforeUpdateDescriptors;
begin
// Abstract.
end;

procedure TIB_StatementLink.SysAfterUpdateDescriptors;
begin
// Abstract.
end;

procedure TIB_StatementLink.ProcessEvent( AEvent: TIB_StatementEventType;
                                          Info: longint );
begin
  if AEvent = setPreparedChanged then 
    if Assigned( OnPreparedChanged ) then
      OnPreparedChanged( Self, Statement );
end;

