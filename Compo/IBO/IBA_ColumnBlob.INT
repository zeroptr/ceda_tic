
{                                                                              }
{ TIB_ColumnBlob                                                               }
{                                                                              }

{***************************************************************}
{                                                               }
{          IB Objects Components and Resources Library          }
{                                                               }
{          Copyright (C) 1996-2001 Jason Wharton                }
{          and Computer Programming Solutions, Mesa, AZ         }
{                                                               }
{  This source code unit is released under the terms of the     }
{  CPS Trustware License.                                       }
{  It may be distributed or deployed as source code or in       }
{  compiled form only in compliance with the terms and          }
{  conditions of the CPS Trustware License which may be         )
{  examined at http://www.ibobjects.com/ibo_trustware.html      )
{                                                               }
{***************************************************************}

{******************************************************************************}
{  CONTRIBUTED MODIFICATIONS                                                   }
{  Additions or modifications listed below using format:                       }
{                                                                              }
{  Joe Citizen <joe@joecitizen.com>                                            }
{  mm/dd/yyyy                                                                  }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{            Copyright (C) 2001 Joe Citizen                                    }
{                                                                              }
{------------------------------------------------------------------------------}
{  Place your credits and information in the top of the section                }
{  below with any other descriptions or explanations desired.                  }
{------------------------------------------------------------------------------}
{                                                                              }
{                                                                              }
{******************************************************************************}

// I had to grab this out of DBTables.PAS from the VCL.
// I modified it so that there wouldn't be a conflict.
TIB_GraphicHeader = record
  Count: word;             { Fixed at 1 }
  HType: word;             { Fixed at $0100 }
  Size:  longint;          { Size not including header }
end;

{: This class is used to handle BLOB column types.
<br><br>
See TIB_Statement.CreateBlobStream() method for more information.}
TIB_ColumnBlob = class(TIB_Column)
private
{ General storage }
  FBlobNode: PIB_BlobNode;
  function GetLoadedBlobNode: PIB_BlobNode;
protected
{ Inherited Property Access methods }
  function GetBlobSize: longint; override;
  function GetOldAsString: string; override;
  function GetAsString: string; override;
  procedure SetAsString( const NewValue: string); override;
{ Property Access methods }
  function GetBlobID: isc_quad; //~virtual;
  function GetOldBlobID: isc_quad; //~virtual;
{ Inherited methods }
  function GetDisplayText: string; override;
  function GetIsLoaded: boolean; override;
  function GetIsModified: boolean; override;
  function SysInternalChanged: boolean; override;
  procedure SysSetIsNull( const AValue: boolean ); override;
{ Utility methods }
  procedure LoadFromBlob( const ABlob: TIB_ColumnBlob );
  procedure LoadFromGraphic( const AGraphic: TGraphic );
  procedure LoadFromStrings( Const AStrings: TStrings );
  procedure LoadFromStream( const AStream: TStream );
  procedure SaveToBlob( const ABlob: TIB_ColumnBlob );
  procedure SaveToStream( const AStream: TStream );
  procedure SaveToGraphic( const AGraphic: TGraphic );
  procedure SaveToStrings( const AStrings: TStrings );
public
  constructor Create( ARow: TIB_Row;
                      PSQLVAR: PXSQLVAR;
                      AFieldNo: smallint ); override;
{ Inherited Methods }
{: Empties the contents of the internal buffer.  If the column is nullable, it
sets the column to NULL;  if not, it sets the contents of the BLOB to zero
bytes.}
  procedure Clear; override;
{: Stream the contents of the BLOB from one of the following types:
<br><br>
TStream, TStrings, TPicture, TGraphic or TIB_ColumnBlob.
<br><br>
NOTE: I cannot provide built-in streaming to the TBlobField without forcing the
VCL/BDE code to be included.  That would defeat the purpose of using IB Objects
to avoid them!}
  procedure Assign( Source: TObject ); override;
{: Stream the contents of the BLOB to one of the following types:
<br><br>
TStream, TStrings, TPicture, TGraphic or TIB_ColumnBlob.
<br><br>
NOTE: I cannot provide built-in streaming to the TBlobField without forcing the
VCL/BDE code to be included.}
  procedure AssignTo( Dest: TObject ); override;
{: Method indicating whether a BLOB is equal to another BLOB.}
  function IsEqualTo( ABlob: TIB_ColumnBlob ): boolean;
{: Method to transfer data from a raw buffer to the contents of the column.}
  procedure SetBlobData( ABuffer: Pointer; ASize: integer ); override;
{: Load BLOB contents from a file.}
  procedure LoadFromFile( const AFileName: string ); override;
{: Save BLOB contents to a file.}
  procedure SaveToFile( const AFileName: string ); override;
{ Properties }

{: Permanent BLOB ID obtained by fetching data from a SELECT statement.}
  property BlobID: isc_quad read GetBlobID;
{: }
  property OldBlobID: isc_quad read GetOldBlobID;
{: Reference to the internal blob storage buffer.}
  property BlobNode: PIB_BlobNode read FBlobNode;
{: Reference to the blob node that contains the current data or nil.}
  property LoadedBlobNode: PIB_BlobNode read GetLoadedBlobNode;
end;

{                                                                              }
{ TIB_ColumnBinary                                                             }
{                                                                              }

{: This component implements the TIB_ColumnBlob class that is used for all blob
columns that are not text.}
TIB_ColumnBinary = class( TIB_ColumnBlob )
end;

{                                                                              }
{ TIB_ColumnMemo                                                               }
{                                                                              }

{: This component implements the TIB_ColumnBlob class that is used for all blob
columns that are text.}
TIB_ColumnMemo = class( TIB_ColumnBlob )
protected 
  function GetAsWideString: WideString; override;
  procedure SetAsWideString( const NewValue: WideString ); override;
public
  constructor Create( ARow: TIB_Row;
                      PSQLVAR: PXSQLVAR;
                      AFieldNo: smallint ); override;
end;

TIB_ColumnBLR = class( TIB_ColumnBlob )
public
  constructor Create( ARow: TIB_Row;
                      PSQLVAR: PXSQLVAR;
                      AFieldNo: smallint ); override;
end;

// IBA_ColumnBlob.IMP
