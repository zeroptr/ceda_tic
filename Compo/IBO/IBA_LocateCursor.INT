
{                                                                              }
{ IBA_LocateCursor                                                             }
{                                                                              }

{***************************************************************}
{                                                               }
{          IB Objects Components and Resources Library          }
{                                                               }
{          Copyright (C) 1996-2001 Jason Wharton                }
{          and Computer Programming Solutions, Mesa, AZ         }
{                                                               }
{  This source code unit is released under the terms of the     }
{  CPS Trustware License.                                       }
{  It may be distributed or deployed as source code or in       }
{  compiled form only in compliance with the terms and          }
{  conditions of the CPS Trustware License which may be         )
{  examined at http://www.ibobjects.com/ibo_trustware.html      )
{                                                               }
{***************************************************************}

{******************************************************************************}
{  CONTRIBUTED MODIFICATIONS                                                   }
{  Additions or modifications listed below using format:                       }
{                                                                              }
{  Joe Citizen <joe@joecitizen.com>                                            }
{  mm/dd/yyyy                                                                  }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{     xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx                 }
{            Copyright (C) 2001 Joe Citizen                                    }
{                                                                              }
{------------------------------------------------------------------------------}
{  Place your credits and information in the top of the section                }
{  below with any other descriptions or explanations desired.                  }
{------------------------------------------------------------------------------}
{                                                                              }
{                                                                              }
{******************************************************************************}

{: VCL compatibility. }
TIB_LocateOption = ( lopCaseInsensitive, lopPartialKey, lopFindNearest );
{: VCL compatibility. }
TIB_LocateOptions = set of TIB_LocateOption;

{$IFNDEF HELPSCAN}
{: This is an internal cursor that is used to process the Locate() and Lookup()
operations. You should never have any need to use this directly.}
TIB_LocateCursor = class( TIB_Cursor )
private
  FBDataset: TIB_BDataset;
  FLocateLinks: TIB_StringList;
  FLocateKeyFields: string;
  FLocateKeyValues: Variant;
  FLocateOptions: TIB_LocateOptions;
  FLocateNearest: boolean;
  FLocateMustBeOnServer: boolean;
  procedure SetLocateLinks( AValue: TIB_StringList );
  procedure SetLocateKeyFields( const AValue: string );
  procedure SetLocateKeyValues( AValue: Variant );
  procedure SetLocateOptions( AValue: TIB_LocateOptions );
  procedure SetLocateNearest( AValue: boolean );
protected
  procedure SysPrepareSQL; override;
  procedure SysBeforeOpen; override;
  function GetParamName( ALink: string ): string; 
public
  constructor Create( AOwner: TComponent ); override;
  destructor Destroy; override;
  procedure FreeServerResources; override;
  property BDataset: TIB_BDataset read FBDataset;
  property LocateKeyFields: string read FLocateKeyFields
                                   write SetLocateKeyFields;
  property LocateKeyValues: Variant read FLocateKeyValues
                                    write SetLocateKeyValues;
  property LocateLinks: TIB_StringList read FLocateLinks
                                       write SetLocateLinks;
  property LocateNearest: boolean read FLocateNearest
                                  write SetLocateNearest;
  property LocateOptions: TIB_LocateOptions read FLocateOptions
                                            write SetLocateOptions;
  property ParamName[ Alink: string ]: string read GetParamName;
end;
{$ENDIF}

// IBA_LocateCursor.IMP
